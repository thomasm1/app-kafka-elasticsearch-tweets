plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.3-SNAPSHOT'
  id 'io.spring.dependency-management' version '1.1.7'
}

group = 'xyz.cryptomaven'
version = '0.0.1-SNAPSHOT'

java {
  sourceCompatibility = JavaVersion.VERSION_17
  targetCompatibility = JavaVersion.VERSION_17
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
	maven {
    name = "spring-snapshots"
    url = uri("https://repo.spring.io/snapshot")
    mavenContent { snapshotsOnly() }
  }
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-data-rest'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'
  implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.0.2'
  implementation 'com.github.javafaker:javafaker:1.0.2'
  implementation 'org.yaml:snakeyaml:2.3'

  configurations.configureEach {
    resolutionStrategy {
      force 'org.yaml:snakeyaml:2.3'
    }
  }
  // JWT Authentication
  implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
  runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
  runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'

//	compileOnly 'org.projectlombok:lombok'
//	annotationProcessor 'org.projectlombok:lombok'
  implementation 'org.projectlombok:lombok:1.18.20'
  annotationProcessor 'org.projectlombok:lombok:1.18.20'

  // MapStruct
  implementation 'org.mapstruct:mapstruct:1.5.3.Final'
  annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.3.Final'
  annotationProcessor 'org.projectlombok:lombok-mapstruct-binding:0.2.0'

	runtimeOnly 'com.h2database:h2'
	runtimeOnly 'com.mysql:mysql-connector-j'

  // Testing Dependencies
  testImplementation 'org.junit.jupiter:junit-jupiter'
  testImplementation 'org.springframework.boot:spring-boot-starter-test'
  testImplementation 'org.mockito:mockito-core'
  testImplementation 'org.springframework.security:spring-security-test:6.2.1'
//	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

	developmentOnly 'org.springframework.boot:spring-boot-devtools'
}

tasks.named('test') {
	useJUnitPlatform()
}

tasks.withType(JavaCompile).configureEach {
  options.compilerArgs.add("-Amapstruct.defaultComponentModel=spring")
}

bootJar {
  archiveFileName = 'rest-service.jar'
}
