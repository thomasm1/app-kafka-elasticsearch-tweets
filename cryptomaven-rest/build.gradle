plugins {
  id 'java'
  id 'org.springframework.boot' version '3.4.3-SNAPSHOT'
  id 'io.spring.dependency-management' version '1.1.7'
}
project.group = 'xyz.cryptomaven' 
project.version =  '1.3.0'


java {
  toolchain {
    languageVersion = JavaLanguageVersion.of(17)
  }
}

configurations {
  compileOnly {
    extendsFrom annotationProcessor
  }
}
repositories {

  mavenCentral()
  maven { url 'https://repo.spring.io/snapshot' }
}
// CLOUD
//ext {
//  set('springCloudVersion', "2023.0.5")
//}

dependencies {

  // CLOUD
//  implementation 'org.springframework.cloud:spring-cloud-config-server'
//  implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
//  implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'
//  implementation 'org.springframework.cloud:spring-cloud-bus'
//  implementation 'org.springframework.cloud:spring-cloud-starter-bus-amqp'
//
//  implementation 'org.springframework.cloud:spring-cloud-starter-circuitbreaker-resilience4j'
//  // TRACING
//  implementation "io.micrometer:micrometer-observation"
//  implementation "io.micrometer:micrometer-tracing-bridge-brave"
//  implementation "io.zipkin.reporter2:zipkin-reporter-brave"
//  implementation "io.github.openfeign:feign-micrometer"
//  implementation 'org.springframework.boot:spring-boot-starter-aop'


  implementation 'org.springframework.boot:spring-boot-starter-actuator'
  implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
  implementation 'org.springframework.boot:spring-boot-starter-data-rest'
  implementation 'org.springframework.boot:spring-boot-starter-security'
  implementation 'org.springframework.boot:spring-boot-starter-validation'
  implementation 'org.springframework.boot:spring-boot-starter-web'

  implementation 'com.opencsv:opencsv:5.7.0'
  compileOnly 'org.projectlombok:lombok'
  annotationProcessor 'org.projectlombok:lombok'
  developmentOnly 'org.springframework.boot:spring-boot-devtools'
  runtimeOnly 'com.h2database:h2'
  implementation 'com.mysql:mysql-connector-j'
//  implementation 'com.oracle.database.jdbc:ojdbc8:19.8.0.0'

  testImplementation 'org.springframework.boot:spring-boot-starter-test'
  testImplementation 'org.springframework.security:spring-security-test'
  // implementation 'com.github.javafaker:javafaker:1.0.2'
  // implementation 'org.yaml:snakeyaml:2.3'

  testImplementation 'org.mockito:mockito-core'
  testImplementation 'org.junit.jupiter:junit-jupiter-api'
  testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine' 
  testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

  implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.0.2'

  // MapStruct
  implementation 'org.mapstruct:mapstruct:1.5.3.Final'
  annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.3.Final'
  annotationProcessor 'org.projectlombok:lombok-mapstruct-binding:0.2.0'

  // JWT Authentication
  implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
  runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
  runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'
}

// CLOUD
//dependencyManagement {
//  imports {
//    mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
//  }
//}
tasks.withType(JavaCompile).configureEach {
  options.compilerArgs.add("-Amapstruct.defaultComponentModel=spring")
}

tasks.named('test') {
  useJUnitPlatform()
}

bootJar {
  archiveFileName = 'cryptomaven-rest.jar'
}
