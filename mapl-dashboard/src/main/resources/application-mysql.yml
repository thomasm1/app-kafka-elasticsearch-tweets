

#spring.mvc.view.prefix=/WEB-INF/jsps
#spring.mvc.view.suffix=.jsp
#server.context-path=/cli
spring.application.name: DASHBOARD-SERVICE
spring.config.import: optional:configserver:http://localhost:8888
eureka.instance.client.serverUrl.defaultZone: http://localhost:8761/eureka/

#spring.datasource.url: jdbc:mysql://localhost:3306/test_db?createDatabaseIfNotExist=true
spring:
  datasource:
    url: jdbc:mysql://dashboarddb.canevyvhhxpf.us-east-1.rds.amazonaws.com:3306/dashboarddb?createDatabaseIfNotExists=true&allowPublicKeyRetrieval=true&useSSL=false&useUnicode=true&characterEncoding=UTF-8&serverTimezone=UTC
    username: admin
    password: ${MYSQL_AWS_DB_PASSWORD}
    driver-class-name:  com.mysql.cj.jdbc.Driver
  jpa:
    database: mysql
    show-sql: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQL8Dialect
        useUnicode: true
        show-sql: true
        format_sql: true
        jdbc.lob.non_contextual_creation: true
        connection:
          characterEncoding:  UTF-8
          CharSet:  UTF-8



# DEV ONLY
spring.jmx.enabled: false
#because the javax.management.InstanceAlreadyExistsException occurs when there is an attempt to register an MBean (Managed Bean) that has already been registered. JMX is used for managing and monitoring Java applications, \
#  and Spring Boot automatically registers various MBeans for management purposes.
spring.jpa.hibernate.ddl-auto: update

management.endpoints.web.exposure.include: "*"
logging.level.org.springframework: info
