spring.application.name: MAPL-GRAPH
spring.application.version: 1.3.0
spring.profiles.active: local
server.port: 8085

spring.config.import: optional:configserver:http://localhost:8888
eureka.instance.client.serverUrl.defaultZone: http://localhost:8761/eureka/
eureka.client.register-with-eureka: true
eureka.client.fetch-registry: true

## Configuring info endpoint
spring.data.rest.base-path: /rest/
info.app.name: ${spring.application.name}
info.app.description: ${spring.application.name} Server Application
info.app.version: ${spring.application.version}

management.info.env.enabled: true
management.endpoint.health.show-details: always #health,metrics
management.endpoints.web.exposure.include: "*" #health,metrics

springdoc:
  api-docs.path: /v3/api-docs
  swagger-ui.path: /swagger-ui.html
#  zipkin-tracing
spring.zipkin.base-url: http://127.0.0.1:9411/
spring.sleuth.sampler.probability: 1.0
# Log
logging.level.org.springdoc: DEBUG
logging.level.org.springframework.web: DEBUG
logging.level.org.springframework: INFO
#trace, debug, info, warn, error, fatal, off,error #nothing but error

# spring.jmx.enabled: false
# because the javax.management.InstanceAlreadyExistsException occurs when there is an attempt to register an MBean (Managed Bean) that has already been registered. JMX is used for managing and monitoring Java applications, \
#  and Spring Boot automatically registers

# Spring AMQP + Actuator
spring.rabbitmq.host: localhost
spring.rabbitmq.port: 5672
spring.rabbitmq.username: guest
spring.rabbitmq.password: guest

spring.jmx.enabled: false
#because the javax.management.InstanceAlreadyExistsException occurs when there is an attempt to register an MBean (Managed Bean) that has already been registered. JMX is used for managing and monitoring Java applications, \
#  and Spring Boot automatically registers various MBeans for management purposes.
app:
  jwt-secret: e037837c23ab0fe4f59e203ece8c0ddda2c70bfd5b5319fce2af9647be43b704
  jwt-expiration-milliseconds: 604800000
mapl.message: Welcome to Mapl

